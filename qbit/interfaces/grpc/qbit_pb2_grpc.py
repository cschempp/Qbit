# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from qbit.interfaces.grpc import qbit_pb2 as qbit__pb2


GRPC_GENERATED_VERSION = '1.70.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in qbit_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class QbitInterfaceStub(object):
    """Interface exported by the server.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CheckServerConnection = channel.unary_unary(
                '/qbit_grpc.QbitInterface/CheckServerConnection',
                request_serializer=qbit__pb2.Ping.SerializeToString,
                response_deserializer=qbit__pb2.Pong.FromString,
                _registered_method=True)
        self.RequestNextActionForInsertion = channel.unary_unary(
                '/qbit_grpc.QbitInterface/RequestNextActionForInsertion',
                request_serializer=qbit__pb2.ObsState.SerializeToString,
                response_deserializer=qbit__pb2.EEFAction.FromString,
                _registered_method=True)
        self.MoveArmToJointPos = channel.unary_unary(
                '/qbit_grpc.QbitInterface/MoveArmToJointPos',
                request_serializer=qbit__pb2.ArmJointPosCmd.SerializeToString,
                response_deserializer=qbit__pb2.ArmJointState.FromString,
                _registered_method=True)
        self.MoveArmEEFtoPose = channel.unary_unary(
                '/qbit_grpc.QbitInterface/MoveArmEEFtoPose',
                request_serializer=qbit__pb2.ArmEEFPoseCmd.SerializeToString,
                response_deserializer=qbit__pb2.ArmJointState.FromString,
                _registered_method=True)
        self.GetArmJointState = channel.unary_unary(
                '/qbit_grpc.QbitInterface/GetArmJointState',
                request_serializer=qbit__pb2.Ping.SerializeToString,
                response_deserializer=qbit__pb2.ArmJointState.FromString,
                _registered_method=True)


class QbitInterfaceServicer(object):
    """Interface exported by the server.
    """

    def CheckServerConnection(self, request, context):
        """Healthy check | Handshake
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RequestNextActionForInsertion(self, request, context):
        """Sim as Client
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MoveArmToJointPos(self, request, context):
        """Sim as Server
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MoveArmEEFtoPose(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetArmJointState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QbitInterfaceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CheckServerConnection': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckServerConnection,
                    request_deserializer=qbit__pb2.Ping.FromString,
                    response_serializer=qbit__pb2.Pong.SerializeToString,
            ),
            'RequestNextActionForInsertion': grpc.unary_unary_rpc_method_handler(
                    servicer.RequestNextActionForInsertion,
                    request_deserializer=qbit__pb2.ObsState.FromString,
                    response_serializer=qbit__pb2.EEFAction.SerializeToString,
            ),
            'MoveArmToJointPos': grpc.unary_unary_rpc_method_handler(
                    servicer.MoveArmToJointPos,
                    request_deserializer=qbit__pb2.ArmJointPosCmd.FromString,
                    response_serializer=qbit__pb2.ArmJointState.SerializeToString,
            ),
            'MoveArmEEFtoPose': grpc.unary_unary_rpc_method_handler(
                    servicer.MoveArmEEFtoPose,
                    request_deserializer=qbit__pb2.ArmEEFPoseCmd.FromString,
                    response_serializer=qbit__pb2.ArmJointState.SerializeToString,
            ),
            'GetArmJointState': grpc.unary_unary_rpc_method_handler(
                    servicer.GetArmJointState,
                    request_deserializer=qbit__pb2.Ping.FromString,
                    response_serializer=qbit__pb2.ArmJointState.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'qbit_grpc.QbitInterface', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('qbit_grpc.QbitInterface', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class QbitInterface(object):
    """Interface exported by the server.
    """

    @staticmethod
    def CheckServerConnection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qbit_grpc.QbitInterface/CheckServerConnection',
            qbit__pb2.Ping.SerializeToString,
            qbit__pb2.Pong.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RequestNextActionForInsertion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qbit_grpc.QbitInterface/RequestNextActionForInsertion',
            qbit__pb2.ObsState.SerializeToString,
            qbit__pb2.EEFAction.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MoveArmToJointPos(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qbit_grpc.QbitInterface/MoveArmToJointPos',
            qbit__pb2.ArmJointPosCmd.SerializeToString,
            qbit__pb2.ArmJointState.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MoveArmEEFtoPose(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qbit_grpc.QbitInterface/MoveArmEEFtoPose',
            qbit__pb2.ArmEEFPoseCmd.SerializeToString,
            qbit__pb2.ArmJointState.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetArmJointState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/qbit_grpc.QbitInterface/GetArmJointState',
            qbit__pb2.Ping.SerializeToString,
            qbit__pb2.ArmJointState.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
